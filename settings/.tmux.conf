# -- variables -------------------------------------------------------------------
## onedark color theme
black="#282c34"
white="#abb2bf"
red="#e06c75"
green="#98c379"
yellow="#e5c07b"
orange="#d19a66"
blue="#61afef"
cyan="#56b6c2"
purple="#c678dd"
visual_grey="#3e4452"
comment_grey="#5c6370"
## powerline glyphs
left_separator=""
left_separator_thin=""
right_separator=""
right_separator_thin=""
## reset style
RESET_STYLE="#[nobold,noitalics,nounderscore]"

# -- general -------------------------------------------------------------------
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',alacritty:RGB'
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 400                   # increase repeat timeout
set -g focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 1     # redraw status line every 10 seconds
set -g status-justify left

# activity
set -g monitor-activity on
set -g visual-activity off

# -- key bindings ----------------------------------------------------------------
# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# create new window
bind c new-window -c "#{pane_current_path}"

# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind _ split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind-key -r M-l swap-window -t +1 \; next-window #swap current window with the next one
bind-key -r M-h swap-window -t -1 \; previous-window #swap current window with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# start with mouse mode enabled
set -g mouse on

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
set -g status-keys vi
set -g mode-keys vi

# replace C-b by C-Space instead of using both prefixes
set -gu prefix2
unbind C-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# copy-mode-vi
bind Enter copy-mode # enter copy mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel # disable Escape bind for tmux-copycat. For further details (https://github.com/tmux-plugins/tmux-copycat/blob/master/docs/limitations.md)
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
bind p paste-buffer  # paste from the top paste buffer
bind C-p choose-buffer # choose which buffer to paste from

# toggle synchronize-panes
bind a setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced' \; refresh-client

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# tmux-plugins settings
## automatic install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
## List of plugins
 set -g @tpm_plugins '            \
   tmux-plugins/tpm               \
   tmux-plugins/tmux-resurrect    \
   tmux-plugins/tmux-continuum    \
   tmux-plugins/tmux-sessionist   \
   tmux-plugins/tmux-yank         \
   tmux-plugins/tmux-copycat      \
   Morantron/tmux-fingers         \
   tmux-plugins/tmux-logging      \
   robhurring/tmux-uptime         \
 '

## plugins settings
### resurrect settings
set -g @resurrect-capture-pane-contents 'on' # pane contentsを保存
set -g @resurrect-processes 'ssh lazygit btm nnn' #プロセスの保存
set -g @resurrect-strategy-nvim 'session' # NeoVimのセッションを保存

### continuum settings
set -g @continuum-restore 'on' # 自動でリストア
set -g @continuum-save-interval '1' #x分ごとに自動でセッションを保存
# set -g status-right 'Continuum status: #{continuum_status}'

### tmux-yank settings
set -g @yank_with_mouse on
set -g @yank_selection_mouse 'clipboard' #mouseでyankした結果をclipboardにコピーする
set -g @shell_mode 'vi'

### tmux-copycat settings
set -g @copycat_hash_search C-M-h

# -- styles ----------------------------------------------------------------
## message-style
set -g message-style fg=$black,bg=$orange
set -g message-command-style fg=$black,bg=$orange
## copy-mode-style
### copy-mode-mark-style,copy-mode-match-style,copy-mode-current-match-styleは今の所masterにしか存在しないoptionだった...
### おそらく、3.2から利用できる
### https://github.com/tmux/tmux/blob/master/CHANGES#:~:text=copy-mode-match-style
### set -g copy-mode-match-style fg=$black,bg=$orange
### set -g copy-mode-current-match-style fg=$black,bg=$orange
### set -g copy-mode-mark-style fg=$black,bg=$orange
## mode-style
set -g mode-style fg=$black,bg=$orange
## panes-style
set -g pane-border-style fg=$visual_grey,bg=$black
set -g pane-active-border-style fg=$blue,bg=$black
## window-style
set -g window-active-style fg=colour255
set -g window-style fg=$white
## status-style
set -g status-style fg=$white,bg=$black
set -g status-right-style fg=$white,bg=$visual_grey
set -g status-left-style fg=$white,bg=$visual_grey
### status indicators
execute_user_indicator="#(ps -t #{pane_tty} -o user= --sort start | tail -1)"

### status-left
set -g status-left "\
#[fg=$visual_grey,bg=$white,bold]#{?client_prefix,#[bg=$blue],} #S\
#[fg=$white,bg=$visual_grey]#{?#{==:#{pane_mode},copy-mode},#[fg=$orange],}$left_separator \
#[fg=$white,bg=$visual_grey,none]#{uptime} \
#[fg=$visual_grey, bg=$black]$left_separator "
set -g status-left-length 120

### status-right
set -g status-right "\
#[fg=$visual_grey,bg=$black,bold]$right_separator\
#[fg=$white,bg=$visual_grey,bold] $execute_user_indicator\
 $right_separator_thin \
#[fg=$white,bg=$visual_grey,bold]#H \
"
set -g status-right-length 120

## window-status-style
set -g window-status-separator ""
set -g window-status-activity-style fg=$purple,bg=$visual_grey
set -g window-status-bell-style fg=$orange,bg=$visual_grey
set -g window-status-current-style fg=$visual_grey,bg=$blue,bold
set -g window-status-last-style fg=$green,bg=$visual_grey
set -g window-status-style fg=$white,bg=$visual_grey
set -g window-status-format "#[fg=$black,bg=$visual_grey]$RESET_STYLE$left_separator #[fg=$white,bg=$visual_grey]#I #[fg=$white,bg=$visual_grey]$RESET_STYLE$left_separator_thin #[fg=$white,bg=$visual_grey]#W #F #[fg=$visual_grey,bg=$black]$RESET_STYLE$left_separator"
set -g window-status-current-format "#[fg=$black,bg=$blue]$RESET_STYLE$left_separator #[fg=$black,bg=$blue]#I #[fg=$black,bg=$blue]$RESET_STYLE$left_separator_thin #[fg=$black,bg=$blue]#W #F #[fg=$blue,bg=$black,nobold,noitalics,nounderscore]$left_separator"

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
