{
  // -----------------------------------
  // * General Settings
  // -----------------------------------
  //
  // Editor Settings
  "editor.fontFamily": "'Fira Code', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.tabSize": 2,
  "editor.insertSpaces": true, // tabを押すとスペースが挿入される
  "editor.wordWrap": "on", // 文字を折り返す
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  // zoom settings
  "editor.mouseWheelZoom": true,
  "window.zoomLevel": 1,
  "window.zoomPerWindow": true,
  // bracket pair settings
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairsHorizontal": "active",
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  // apply formatter
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.sortImports": "explicit"
  },
  "[html]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[typescript]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[javascript]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[json]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[python]": {
    "editor.formatOnType": true
  },
  "javascript.preferGoToSourceDefinition": true,
  "typescript.preferGoToSourceDefinition": true,
  // trim lines
  "files.trimFinalNewlines": true, // 有効にすると、ファイルの保存時に最終行以降の新しい行をトリミングします。
  "files.trimTrailingWhitespace": true, // 有効にすると、ファイルの保存時に末尾の空白をトリミングします。
  "files.associations": {
    // mdxをmarkdownとして扱う
    "*.mdx": "markdown",
    // infoをiniとして扱う
    "*.info": "ini",
    "*.css": "tailwindcss",
  },
  // ! deprecated "editor.renameOnType": true, //対応するタグを自動的にrenameする(HTMLのみ対応)
  "editor.linkedEditing": true,
  "javascript.preferences.renameMatchingJsxTags": true,
  "typescript.preferences.renameMatchingJsxTags": true,
  // for further details https://code.visualstudio.com/updates/v1_44#_synced-regions
  // この辺のIssueが解決されたらJSXに実装される可能性はある
  // https://github.com/microsoft/vscode/issues/94316
  // https://github.com/microsoft/vscode/issues/85707
  "editor.autoClosingQuotes": "always", // auto close tag literal(``)
  // QuickOpenから開くときのみpreviewモードを使わない
  "workbench.editor.enablePreview": true,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  // ファイル名の横に親フォルダの名前を表示する
  // Next.js App Routerで複数のpage.tsxを識別するのに便利
  "workbench.editor.labelFormat": "short",
  // quick openからフォルダを開くときは新しいwindowにする
  "window.openFoldersInNewWindow": "on",
  // "workbench.editor.enablePreviewFromCodeNavigation": true,
  "workbench.editor.pinnedTabsOnSeparateRow": true,
  "workbench.tree.enableStickyScroll": true,
  // suggestion settings
  "editor.tabCompletion": "on", // snippetでtab stopが使えるようになる
  "editor.wordBasedSuggestions": "matchingDocuments",
  "editor.suggest.showKeywords": true,
  "editor.quickSuggestions": {
    "other": true,
    "comments": true, // コメント入力時にsuggestを表示する
    "strings": true // 文字列を入力時にsuggestを表示する
  },
  "editor.quickSuggestionsDelay": 0, // Suggestionが表示されるまでのディレイ
  "editor.snippetSuggestions": "top", // snippetが常にSuggestionリストの一番上に来るようにする
  "editor.suggest.snippetsPreventQuickSuggestions": false, // false: tab stop中に入力補完を使う
  "editor.acceptSuggestionOnCommitCharacter": false, // dotでsuggestionを選択しないようにする
  "editor.parameterHints.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": true
  },
  "[cpp]": {
    // "editor.wordBasedSuggestions": false,
    "editor.suggest.insertMode": "replace",
    "editor.semanticHighlighting.enabled": true
  },
  "[markdown]": {
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "on",
      "strings": "on",
      "other": "on"
    },
    "cSpell.fixSpellingWithRenameProvider": true,
    "cSpell.advanced.feature.useReferenceProviderWithRename": true,
    "cSpell.advanced.feature.useReferenceProviderRemove": "/^#+\\s/",
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000
  },
  "markdown.editor.filePaste.enabled": "always", // markdownファイルに画像を貼り付けるときに、画像を自動的に保存する
  "markdown.editor.filePaste.copyIntoWorkspace": "mediaFiles", // markdownファイルに画像を貼り付けるときに、画像を自動的に保存するフォルダ
  "markdown.editor.drop.enabled": "always", // markdownファイルに画像をドラッグ＆ドロップするときに、画像を自動的に保存する
  "markdown.editor.drop.copyIntoWorkspace": "mediaFiles",
  "markdown.copyFiles.destination": {
    "**/*": "${documentDirName}/media/"
  },
  "markdown.preview.scrollEditorWithPreview": true,
  "markdown.preview.scrollPreviewWithEditor": true,
  "markdown-preview-enhanced.scrollSync": true,
  // sticky scroll
  "editor.stickyScroll.enabled": true,
  // highlight
  "editor.semanticHighlighting.enabled": "configuredByTheme",
  // Alt Keyをバインドするため、デフォルトの動作を無効化する
  "window.titleBarStyle": "custom",
  "window.customMenuBarAltFocus": false,
  // Terminal settings
  "terminal.external.linuxExec": "alacritty",
  "terminal.integrated.copyOnSelection": true, // Terminalで範囲選択した部分を自動的にコピーする
  "terminal.integrated.fontFamily": "'Fira Code', monospace",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose", // 終了時にterminalのプロセスを保存
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.mouseWheelZoom": true,
  // Auto Import Settings
  "javascript.suggest.autoImports": true,
  "typescript.suggest.autoImports": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  // Emmet Settings
  "emmet.triggerExpansionOnTab": false, // Tab keyでEmmetを展開する
  "emmet.showSuggestionsAsSnippets": false, // EmmetをSuggestion Listに表示させるかどうか
  "emmet.showExpandedAbbreviation": "never",
  // Emmetを使用するファイルタイプを指定する
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact",
    "vue-html": "html",
    "razor": "html",
    "plaintext": "pug"
  },
  // Breadcrumbs Settings
  "breadcrumbs.enabled": true, // パンくずリストを有効にする
  // explorer settings
  // "workbench.list.keyboardNavigation": "filter", // Explorerでの検索ではマッチしたファイルのみを表示する
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  // git Settings
  "git.autofetch": true,
  "git.confirmSync": false,
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "stash-push:command",
    "switch:command",
    "push:command"
  ],
  "githubPullRequests.fileListLayout": "tree",
  "githubPullRequests.pullBranch": "never",
  "git.enableSmartCommit": true,
  // For prevent Problems loading reference 'vscode://schemas/settings/configurationDefaults': Unable to load schema from 'vscode://schemas/settings/configurationDefaults': cannot open vscode://schemas/settings/configurationDefaults. Detail: Unable to resolve text model content for resource
  // https://github.com/microsoft/tsdoc/issues/253#issuecomment-1555873528
  "json.schemaDownload.enable": true,
  // -----------------------------------
  // * Extension Settings
  // -----------------------------------
  // One Dark Pro settings
  "workbench.colorTheme": "One Dark Pro",
  "workbench.colorCustomizations": {
    "editor.findMatchHighlightBackground": "#e5c07b40"
  },
  // vscodevim settings
  "vim.startInInsertMode": false, // Normal Modeで開始する
  "vim.enableNeovim": true, // NeoVim実行ファイルまでのパスを指定する
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true, // yank時にシステムのクリップボードにコピー
  "vim.visualstar": true, // カーソル上にあるワードを"*"で検索
  "vim.useCtrlKeys": true, // VSCodeのCtrlキーを使った操作をVimのもので上書きする
  "vim.hlsearch": true,
  "vim.highlightedyank.enable": true, // yank時にハイライトする
  "vim.highlightedyank.duration": 400, // yankハイライト時間を調整する
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<c-n>": true
  },
  // InsertModeのキーバインドを設定する
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<C-i>"
      ],
      "after": [
        "<C-[>"
      ]
    }
  ],
  // NormalModeのキーバインドを設定する
  "vim.normalModeKeyBindings": [
    {
      // <leader> w で保存
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      // <leader> x でエディタを閉じる
      "before": [
        "<leader>",
        "x"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    // window resize
    {
      "before": [
        "<c-w>",
        "+"
      ],
      "commands": [
        "workbench.action.increaseViewSize"
      ]
    },
    {
      "before": [
        "<c-w>",
        "-"
      ],
      "commands": [
        "workbench.action.decreaseViewSize"
      ]
    },
    {
      // yank file
      "before": [
        "<leader>",
        "y"
      ],
      "commands": [
        ":%y"
      ]
    },
    {
      // create new file
      "before": [
        "<leader>",
        "n"
      ],
      "commands": [
        ":tabe"
      ]
    },
    {
      // create new file
      "before": [
        "<c-s-e>"
      ],
      // "before": ["<leader>", "e"],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // サーチハイライトをトグルする
    {
      "before": [
        "<ESC>",
        "<ESC>"
      ],
      "commands": [
        ":set hlsearch!"
      ]
    },
    // 移動関連
    // 行移動
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    },
    // Lで行末へ
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    // Hで行頭へ
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    },
    // Go to problem
    {
      "before": [
        "g",
        "j"
      ],
      "commands": [
        "editor.action.marker.nextInFiles"
      ]
    },
    {
      "before": [
        "g",
        "k"
      ],
      "commands": [
        "editor.action.marker.prevInFiles"
      ]
    },
    // Split window
    {
      "before": [
        "<c-w>",
        "_"
      ],
      "after": [
        "<c-w>",
        "v"
      ]
    },
    {
      "before": [
        "<c-w>",
        "-"
      ],
      "after": [
        "<c-w>",
        "s"
      ]
    },
    // easymotion
    {
      "before": [
        "<leader>",
        "s"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "2",
        "s"
      ]
    },
    {
      "before": [
        "<leader>",
        "l"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "<leader>",
        "b",
        "d",
        "j",
        "k"
      ]
    },
    // MarkdownPreviewを実行する
    {
      "before": [
        "<leader>",
        "m",
        "p"
      ],
      "commands": [
        "markdown.showPreviewToSide"
      ]
    },
    // Replace
    {
      "before": [
        "<leader>",
        "r"
      ],
      "commands": [
        "editor.action.startFindReplaceAction"
      ]
    },
    // Rename Symbol
    {
      "before": [
        "<leader>",
        "R"
      ],
      "commands": [
        "editor.action.rename"
      ]
    },
    // insert line
    {
      "before": [
        "<leader>",
        "o"
      ],
      "commands": [
        "editor.action.insertLineAfter"
      ]
    },
    {
      "before": [
        "<leader>",
        "O"
      ],
      "commands": [
        "editor.action.insertLineBefore"
      ]
    },
    // Undo & Redo
    // for fixing https://github.com/VSCodeVim/Vim/issues/8157
    {
      "before": [
        "u"
      ],
      "commands": [
        "undo"
      ]
    },
    {
      "before": [
        "c-r"
      ],
      "commands": [
        "redo"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // 移動関連
    // 行移動
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    },
    // Lで行末へ
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    // Hで行頭へ
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    },
    // easymotion
    {
      "before": [
        "<leader>",
        "s"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "2",
        "s"
      ]
    },
    {
      "before": [
        "<leader>",
        "l"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "<leader>",
        "b",
        "d",
        "j",
        "k"
      ]
    },
    {
      "before": [
        "<C-i>"
      ],
      "after": [
        "<C-[>"
      ]
    }
  ],
  "vim.operatorPendingModeKeyBindings": [
    // 移動関連
    // 行移動
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    },
    // Lで行末へ
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    // Hで行頭へ
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    }
  ],
  // macros settings
  "macros": {
    "closeTerminal": [
      "workbench.action.toggleMaximizedPanel",
      "workbench.action.closePanel"
    ]
  },
  // markdown-all-in-one settings
  "markdown.extension.preview.autoShowPreviewToSide": false,
  // markdownlint settings
  "markdownlint.config": {
    "MD034": false, // bare urlに<>を追加するかどうか
    "MD026": false, // 文末の!を取り除かない
    "MD040": false // コードブロックにlanguageを指定しないことを許可する
  },
  "markdownlint.run": "onSave",
  // git-graph settings
  "git-graph.keyboardShortcut.scrollToHead": "UNASSIGNED",
  // Other settings auto inserted by gui
  "diffEditor.ignoreTrimWhitespace": false,
  "gitlens.views.repositories.files.layout": "list",
  "gitlens.views.branches.branches.layout": "list",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook",
    "*.db": "default"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "redhat.telemetry.enabled": false,
  "editor.inlineSuggest.enabled": true,
  "git.openRepositoryInParentFolders": "never",
  "terminal.integrated.fontSize": 16,
  "docker.extension.enableComposeLanguageServer": false,
  "remote.SSH.defaultExtensions": [
    "geddski.macros",
    "mhutchie.git-graph"
  ],
  "dev.containers.defaultExtensions": [
    "geddski.macros",
    "mhutchie.git-graph"
  ],
  // VSCodeでIMEがうまく動作しない問題を回避するための設定
  // https://zenn.dev/hibikine/articles/ac0295ebffa652
  "editor.experimentalEditContextEnabled": false
}